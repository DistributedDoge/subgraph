specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Drips
    network: {{ network }}
    source:
      address: '{{drips.address}}'
      abi: Drips
      startBlock: {{ drips.block }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Drips
      abis:
        - name: Drips
          file: ./abis/Drips.json
      eventHandlers:
        - event: AccountMetadataEmitted(indexed uint256,indexed bytes32,bytes)
          handler: handleAccountMetadata
        - event: Collected(indexed uint256,indexed address,uint128)
          handler: handleCollected
        - event: StreamsSet(indexed uint256,indexed address,indexed bytes32,bytes32,uint128,uint32)
          handler: handleStreamsSet
        - event: StreamReceiverSeen(indexed bytes32,indexed uint256,uint256)
          handler: handleStreamReceiverSeen
        - event: SqueezedStreams(indexed uint256,indexed address,indexed uint256,uint128,bytes32[])
          handler: handleSqueezedStreams
        - event: SplitsSet(indexed uint256,indexed bytes32)
          handler: handleSplitsSet
        - event: SplitsReceiverSeen(indexed bytes32,indexed uint256,uint32)
          handler: handleSplitsReceiverSeen
        - event: Given(indexed uint256,indexed uint256,indexed address,uint128)
          handler: handleGiven
        - event: DriverRegistered(indexed uint32,indexed address)
          handler: handleAppRegistered
        - event: DriverAddressUpdated(indexed uint32,indexed address,indexed address)
          handler: handleAppAddressUpdated
        - event: Split(indexed uint256,indexed uint256,indexed address,uint128)
          handler: handleSplit
        - event: ReceivedStreams(indexed uint256,indexed address,uint128,uint32)
          handler: handleReceivedStreams
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: NFTDriver
    network: {{ network }}
    source:
      address: '{{nftDriver.address}}'
      abi: NFTDriver
      startBlock: {{ nftDriver.block }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - NFTDriver
      abis:
        - name: NFTDriver
          file: ./abis/NFTDriver.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleNFTSubAccountTransfer
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: ImmutableSplitsDriver
    network: {{ network }}
    source:
      address: '{{immutableSplitsDriver.address}}'
      abi: ImmutableSplitsDriver
      startBlock: {{ immutableSplitsDriver.block }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ImmutableSplitsDriver
      abis:
        - name: ImmutableSplitsDriver
          file: ./abis/ImmutableSplitsDriver.json
      eventHandlers:
        - event: CreatedSplits(indexed uint256,indexed bytes32)
          handler: handleImmutableSplitsCreated
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: RepoDriver
    network: {{ network }}
    source:
      address: '{{repoDriver.address}}'
      abi: RepoDriver
      startBlock: {{ repoDriver.block }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - RepoDriver
      abis:
        - name: RepoDriver
          file: ./abis/RepoDriver.json
      eventHandlers:
        - event: OwnerUpdateRequested(indexed uint256,uint8,bytes)
          handler: handleOwnerUpdateRequested
        - event: OwnerUpdated(indexed uint256,address)
          handler: handleOwnerUpdated
      file: ./src/repoDriverHandlers.ts
